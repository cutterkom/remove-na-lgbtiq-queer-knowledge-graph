#defaultView:ImageGrid

# Prefix standard 
# Factgrid
PREFIX fg: <https://database.factgrid.de/entity/>
PREFIX fgt: <https://database.factgrid.de/prop/direct/>
# DBpedia
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX dbr: <http://dbpedia.org/resource/> 
# Wikidata
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
# misc
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dct:  <http://purl.org/dc/terms/>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX schema: <http://schema.org/>
prefix foaf:  <http://xmlns.com/foaf/0.1/> 
    
SELECT DISTINCT ?fg_item ?label ?image ?relations_fg ?relations_wd ?relations_db WHERE {

  # labels from Factgrid
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }  
  
  # starting point is a factgrid item
  BIND(fg:Q226350 as ?fg_item)
  # transform wikidata qid in factgrid to wikidata entity iri
  ?link schema:about ?fg_item .
  ?link schema:isPartOf <https://www.wikidata.org/> . 
  ?link schema:name ?qid.
  BIND(IRI(CONCAT(STR(wd:), ?qid)) AS ?wd_item)

  {
    OPTIONAL {
       VALUES ?relations_fg {
        # see list: https://tinyurl.com/268grhz2
        fgt:P84 # spouse
        fgt:P117 # unmarried partner
        fgt:P117 #affair
        fgt:P203 # sibling
        fgt:P142 # mother
        fgt:P313 # stepmother
        fgt:P141 # father
        fgt:P312 # stepfather
        fgt:P190 # student
        }
        ?fg_item ?relations_fg ?value .
        ?value fgt:P189 ?image
        

    }
  } UNION {
  # fetch data from DBpedia
  SERVICE <https://dbpedia.org/sparql> {
    # get Wikidata QID from DBPedia resource
    ?db_item owl:sameAs ?wd_item

    OPTIONAL {
       VALUES ?relations_db {
        # see list: https://dbpedia.org/ontology/Person
        dbo:partner
        dbo:relation
        dbo:relative
        dbo:child
        dbo:spouse
        dbo:parent
        dbo:opponent
        dbo:affair
        dbo:colleague
        dbo:friend
        dbo:sibling
        dbo:spouseName
        dbo:student
        }
        ?db_item ?relations_db ?value .
               
     
      # get images
      {?value dbo:thumbnail ?image .}
      
    }
  }
} UNION {
  # fetch data from DBpedia
  SERVICE <https://dbpedia.org/sparql> {
    # get Wikidata QID from DBPedia resource
    ?db_item owl:sameAs ?wd_item

    OPTIONAL { 
      # get all wikipedia links
      ?db_item dbo:wikiPageWikiLink ?db_wikilink .
      # just those that are persons
      ?db_wikilink a dbo:Person .
      # remove Stefan Zweig, because there is some data fuckup within that resource (I informed DBpedia)
      MINUS {FILTER(REGEX(STR(?db_wikilink), "Stefan_Zweig|LGBT_rights_by_country_or_territory"))}
      # also get their wikidata qid's
      ?db_wikilink owl:sameAs ?db_wikilink_wd_item FILTER(regex(str(?db_wikilink_wd_item), "wikidata" ))

    ?db_wikilink dbo:thumbnail ?image}
      
    }
  
} UNION {
  # fetch data from wikidata
  SERVICE <https://query.wikidata.org/sparql> {
   OPTIONAL {
     VALUES ?relations_wd {
        # see list: https://www.wikidata.org/wiki/Wikidata:List_of_properties/Wikidata_property_for_items_about_people_or_organisations/human
        wdt:P26 # spouse
        wdt:P22 # father
        wdt:P25 # mother
        wdt:P40 # child
        wdt:P451 # unmarried partner
        wdt:P1038 # relative
        wdt:P1066 # student of
        wdt:P1290 # godparent
        wdt:P3373 # sibling
        wdt:P3448 # stepparent
        }
    ?wd_item ?relations_wd ?value.
    #?property wikibase:directClaim ?relations.
    ?value wdt:P18 ?image
   }
   }
  }
  # generate label from cascade
 BIND(COALESCE(?valueLabel, ?value, ?db_wikilink , "no_label") AS ?label).
} 