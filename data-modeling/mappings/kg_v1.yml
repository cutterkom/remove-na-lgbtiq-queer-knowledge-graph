prefixes:
  ex_author: "http://example.com/author/"
  ex_publisher: "http://example.com/publisher/"
  ex_poster: "http://example.com/poster/"
  ex_book: "http://example.com/book/"
  schema: "https://schema.org/"

authors: Katharina Brunner <kontakt@katharinabrunner.de>
  
sources:
  books:
    table: books_wide
    queryFormulation: mysql
  posters:
    table: posters_wide
    queryFormulation: mysql
  entities:
    table: entities_per_type
    queryFormulation: mysql
  publishers:
    queryFormulation: mysql
    query: |
      SELECT DISTINCT id, NAME, publisher_book_id 
      FROM entities_per_type
      WHERE publisher_book_id IS NOT NULL;
    

mappings:
  BookMapping:
    sources: books
    s: ex_book:$(book_id)
    po:
      - [a, schema:Book]
      - [schema:name, $(title)]
      - [schema:isbn, $(isbn)]
      - p: schema:author
        o: 
        - mapping: AuthorMapping
          condition:
            function: equal
            parameters:
              - [str1, $(book_id)]
              - [str2, $(book_id)]
      - p: schema:publisher
        o: 
        - mapping: PublisherMapping
          condition:
            function: equal
            parameters:
              - [str1, $(book_id)]
              - [str2, $(publisher_book_id)]              

  AuthorMapping:
    sources: entities
    s: ex_author:$(id)
    po:
      - [a, schema:Author]
      - [schema:author, $(name)]
  
  PublisherMapping:
    sources: publishers
    s: ex_publisher:$(id)
    po:
      - [a, schema:Organisation]
      - [schema:name, $(name)]      

  PosterMapping:
    sources: posters
    s: ex_poster:$(poster_id)
    po:
      - [a, schema:Poster]
      - [schema:description, $(title)]
      - [schema:size, $(size)]
      - [schema:dateCreated, $(year)]
      - p: schema:author
        o: 
        - mapping: AuthorMapping
          condition:
            function: equal
            parameters:
              - [str1, $(poster_id)]
              - [str2, $(poster_id)]
